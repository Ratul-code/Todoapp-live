{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","changehandler","e","setState","todo","state","title","target","value","submithandler","csrftoken","getCookie","preventDefault","url","editing","id","fetch","method","headers","body","JSON","stringify","then","res","fetchtodo","uncompleted","catch","error","console","log","completehandler","err","todoList","bind","this","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","response","json","data","er","todos","className","onSubmit","style","flex","onChange","placeholder","type","map","onClick","edithandler","deletehandler","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c946b8d.chunk.js","sourcesContent":["import \"./App.css\";\n\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoList: [],\n      todo: {\n        id: null,\n        title: \"\",\n        uncompleted: true,\n      },\n      editing: false,\n    };\n    this.fetchtodo = this.fetchtodo.bind(this);\n  }\n  componentDidMount() {\n    this.fetchtodo();\n  }\n\n  changehandler = (e) => {\n    this.setState({\n      todo: {\n        ...this.state.todo,\n        title: e.target.value,\n      },\n    });\n  };\n\n  submithandler = (e) => {\n    let csrftoken = this.getCookie(\"csrftoken\");\n    e.preventDefault();\n\n    let url = \"https://todoapp-live.herokuapp.com/api/todo-create/\";\n    if (this.state.editing === true) {\n      url = `https://todoapp-live.herokuapp.com/api/todo-update/${this.state.todo.id}/`;\n      this.setState({\n        editing: false,\n      });\n    }\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n      body: JSON.stringify(this.state.todo),\n    })\n      .then((res) => {\n        this.fetchtodo();\n        this.setState({\n          todo: {\n            id: null,\n            title: \"\",\n            uncompleted: true,\n          },\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== \"\") {\n      const cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  fetchtodo() {\n    fetch(\"https://todoapp-live.herokuapp.com/api/todo-list/\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          todoList: data,\n        });\n      });\n  }\n  completehandler = (todo) => {\n    todo.uncompleted = !todo.uncompleted;\n    let csrftoken = this.getCookie(\"csrftoken\");\n    fetch(`https://todoapp-live.herokuapp.com/api/todo-update/${todo.id}/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n      body: JSON.stringify(todo),\n    })\n      .then((res) => this.fetchtodo())\n      .catch((err) => console.log(err));\n  };\n\n  edithandler(todo) {\n    this.setState({\n      todo: todo,\n      editing: true,\n    });\n  }\n  deletehandler(todo) {\n    var csrftoken = this.getCookie(\"csrftoken\");\n    fetch(`https://todoapp-live.herokuapp.com/api/todo-delete/${todo.id}/`, {\n      method: \"DELETE\",\n      headers: { \"Content-type\": \"application/json\", \"X-CSRFToken\": csrftoken },\n      body: JSON.stringify(this.state.todo),\n    })\n      .then((res) => {\n        this.fetchtodo();\n      })\n      .catch((er) => console.log(er));\n  }\n\n  render() {\n    let todos = this.state.todoList;\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.submithandler} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                  <input\n                    onChange={this.changehandler}\n                    id=\"title\"\n                    value={this.state.todo.title}\n                    className=\"form-control\"\n                    placeholder=\"Title\"\n                    name=\"title\"\n                    type=\"text\"\n                  />\n                </div>\n                <div style={{ flex: 1 }}>\n                  <input\n                    id=\"submit\"\n                    className=\"btn btn-warning\"\n                    name=\"add\"\n                    type=\"submit\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div id={\"list-wrapper\"}>\n            {todos.map((todo) => {\n              return (\n                <div key={todo.id} className=\"task-wrapper flex-wrapper\">\n                  <div\n                    onClick={() => this.completehandler(todo)}\n                    style={{ flex: 7 }}\n                  >\n                    {todo.uncompleted ? (\n                      <strike>{todo.title}</strike>\n                    ) : (\n                      <span>{todo.title}</span>\n                    )}\n                  </div>\n                  <div style={{ flex: 1 }}>\n                    <button\n                      onClick={() => this.edithandler(todo)}\n                      className=\"btn btn-sm btn-outline-info\"\n                    >\n                      Edit\n                    </button>\n                  </div>\n                  <div style={{ flex: 1 }}>\n                    <button\n                      onClick={() => {\n                        this.deletehandler(todo);\n                      }}\n                      className=\"btn btn-sm btn-outline-dark delete\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}